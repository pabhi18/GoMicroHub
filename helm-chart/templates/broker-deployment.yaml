apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-chart.fullname" . }}-broker
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: broker
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "helm-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: broker
  template:
    metadata:
      labels:
        {{- include "helm-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: broker
    spec:
      containers:
        - name: {{ .Chart.Name }}-broker
          image: "{{ .Values.image.brokerService.repository }}:{{ .Values.image.brokerService.tag }}"
          imagePullPolicy: {{ .Values.image.brokerService.pullPolicy }}
          env:
            - name: MONGO_URL
              value: {{ .Values.env.broker.MONGO_URL }}
            - name: RABBITMQ_URL
              value: {{ .Values.env.broker.RABBITMQ_URL }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: wait-for-mongodb
          image: busybox:1.28
          command: ['sh', '-c', 'until echo > /dev/tcp/microservices-mongodb/27017; do echo "waiting for mongodb"; sleep 5; done;']
        - name: wait-for-rabbitmq
          image: busybox:1.28
          command: ['sh', '-c', 'until echo > /dev/tcp/microservices-rabbitmq/5672; do echo "waiting for rabbitmq"; sleep 5; done;']
