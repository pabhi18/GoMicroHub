replicaCount: 1

image:
  brokerService:
    repository: pabhi4881/gomicrohub-broker-service
    tag: "latest"
    pullPolicy: IfNotPresent

  authenticationService:
    repository: pabhi4881/gomicrohub-authentication-service
    tag: "latest"
    pullPolicy: IfNotPresent

  loggerService:
    repository: pabhi4881/gomicrohub-logger-service
    tag: "latest"
    pullPolicy: IfNotPresent

  mailerService:
    repository: pabhi4881/gomicrohub-mailer-service
    tag: "latest"
    pullPolicy: IfNotPresent

  listenerService:
    repository: pabhi4881/gomicrohub-lister-services
    tag: "latest"
    pullPolicy: IfNotPresent

service:
  brokerService:
    type: ClusterIP
    port: 8080

  authenticationService:
    type: ClusterIP
    port: 8083

  loggerService:
    type: ClusterIP
    port: 8084

  mailerService:
    type: ClusterIP
    port: 8081

  listenerService:
    type: ClusterIP
    port: 8082

postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    postgresPassword: password
    username: postgres
    password: password
    database: users
  primary:
    persistence:
      enabled: true
      size: 1Gi
  fullnameOverride: "microservices-postgresql"
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: "14"

mongodb:
  enabled: true
  auth:
    rootPassword: password
    username: admin
    password: password
    database: logs
  persistence:
    enabled: true
    size: 1Gi
  fullnameOverride: "microservices-mongodb"
  architecture: standalone
  image:
    tag: "4.4.6"
  resources:
    limits:
      memory: 1Gi
      cpu: 1000m
    requests:
      memory: 512Mi
      cpu: 250m
  startupProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30

rabbitmq:
  enabled: true
  auth:
    username: guest
    password: guest
  persistence:
    enabled: true
    size: 1Gi
  fullnameOverride: "microservices-rabbitmq"
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m
  startupProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: "localhost"
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: broker-service
              port:
                number: 8080

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /ping
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6

readinessProbe:
  httpGet:
    path: /ping
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automount: true

mail:
  username: ""
  password: ""
  domain: "localhost"
  host: "mailhog"
  port: "1025"
  encryption: "none"
  fromName: "sanjay gupta"
  fromAddress: "sanjaygupta07054@gmail.com"

autoscaling:
  enabled: false  # Set to true if you want to enable autoscaling
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

env:
  auth:
    DSN: "host=microservices-postgresql user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  broker:
    MONGO_URL: "mongodb://admin:password@microservices-mongodb:27017/logs?authSource=admin"
    RABBITMQ_URL: "amqp://guest:guest@microservices-rabbitmq:5672/"
  
  listener:
    RABBITMQ_URL: "amqp://guest:guest@microservices-rabbitmq:5672/"
    MONGO_URL: "mongodb://admin:password@microservices-mongodb:27017/logs?authSource=admin"

  mailer:
    MAIL_DOMAIN: "microservices-mailhog"
    MAIL_HOST: "microservices-mailhog"
    MAIL_PORT: "1025"
    MAIL_ENCRYPTION: "none"
    MAIL_USERNAME: ""
    MAIL_PASSWORD: ""
    FROM_NAME: "sanjay gupta"
    FROM_ADDRESS: "sanjaygupta07054@gmail.com"

storage:
  className: standard
  postgresql:
    size: 1Gi
  mongodb:
    size: 1Gi
  rabbitmq:
    size: 1Gi
