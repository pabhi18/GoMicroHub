version: '1'

services:
  broker-services:
    build:
      context: ./../broker-service
      dockerfile: broker-service.dockerfile 
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    restart: always  


  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    ports:
      - "8081:8080"
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  

  logger-service:
    build: 
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    ports:
      - "8082:8080"
    deploy:
      mode: replicated
      replicas: 1
    restart: always


  postgres:
    image: "postgres:14.0"
    ports:
      - "5432:5432"
    restart: always
    deploy: 
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres:/var/lib/postgresql/data/

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    restart: always 
    volumes:
      - ./db-data/mongo/ :/data/db  
